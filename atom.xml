<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dolice Lab]]></title>
  <link href="http://lab.dolice.net/atom.xml" rel="self"/>
  <link href="http://lab.dolice.net/"/>
  <updated>2013-05-08T22:23:43+09:00</updated>
  <id>http://lab.dolice.net/</id>
  <author>
    <name><![CDATA[Masaki Hirokawa]]></name>
    <email><![CDATA[masakihirokawa@gmai.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ランダム値から真偽値を生成し振り分け処理する方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/05/09/objc-randomize-boolean/"/>
    <updated>2013-05-09T08:20:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/05/09/objc-randomize-boolean</id>
    <content type="html"><![CDATA[<p>ランダム値から真偽値を生成し振り分け処理するサンプルを以下に作成しました。</p>

<p>サンプルでは、乱数から0か1の数値を取得し判別処理を行っています。ランダム値を取得するには、「arc4random_uniform」メソッドを使用します。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-randomize-boolean">https://github.com/masakihirokawa/objc-randomize-boolean</a></li>
</ul>


<h2>タイマー定義</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//乱数を出力する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugRandomizeNumber</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ループ回数</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">randomizeNum</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//乱数を入れる BOOL値</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">b</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">randomizeNum</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//1か0が代入される</span>
</span><span class='line'>    <span class="n">b</span> <span class="o">=</span> <span class="n">arc4random_uniform</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//乱数が1の場合の処理</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//乱数が0の場合の処理</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">//デバッグ出力</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%d&quot;</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遅延実行タイマーの使用方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/05/08/objc-ns-timer-scheduled-timer-with-time-interval/"/>
    <updated>2013-05-08T16:39:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/05/08/objc-ns-timer-scheduled-timer-with-time-interval</id>
    <content type="html"><![CDATA[<p>タイマーイベントを遅延実行するサンプルを以下に作成しました。</p>

<p>サンプルでは、タイマーを定義した2秒後にラベルのアニメーションイベントを呼び出しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-timer-scheduled-timer-with-timer-interval">https://github.com/masakihirokawa/objc-ns-timer-scheduled-timer-with-timer-interval</a></li>
</ul>


<h2>タイマー定義</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//遅延実行のタイマー定義</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setTimeInterval</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//2秒後にセレクタメソッドを実行する</span>
</span><span class='line'>  <span class="n">_completedTimer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="mf">2.0f</span>
</span><span class='line'>                                                     <span class="nl">target:</span><span class="n">self</span>
</span><span class='line'>                                                   <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">onCompletedAnimationTimerEvent:</span><span class="p">)</span>
</span><span class='line'>                                                   <span class="nl">userInfo:</span><span class="nb">nil</span>
</span><span class='line'>                                                    <span class="nl">repeats:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>タイマー削除</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//遅延実行のタイマーイベント</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">onCompletedAnimationTimerEvent:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">_completedTimer</span> <span class="n">invalidate</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーションさせるラベル</span>
</span><span class='line'><span class="k">@property</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">animationLabel</span><span class="p">;</span>
</span><span class='line'><span class="c1">//遅延実行タイマー</span>
</span><span class='line'><span class="k">@property</span> <span class="n">NSTimer</span> <span class="o">*</span><span class="n">completedTimer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//遅延実行のタイマー定義</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setTimeInterval</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//遅延実行のタイマー定義</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setTimeInterval</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//2秒後にセレクタメソッドを実行する</span>
</span><span class='line'>  <span class="n">_completedTimer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="mf">2.0f</span>
</span><span class='line'>                                                     <span class="nl">target:</span><span class="n">self</span>
</span><span class='line'>                                                   <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">onCompletedAnimationTimerEvent:</span><span class="p">)</span>
</span><span class='line'>                                                   <span class="nl">userInfo:</span><span class="nb">nil</span>
</span><span class='line'>                                                    <span class="nl">repeats:</span><span class="n">NO</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//遅延実行のタイマーイベント</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">onCompletedAnimationTimerEvent:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">_completedTimer</span> <span class="n">invalidate</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initAnimationLabel</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">slideInAnimation</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーションさせるラベルを初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initAnimationLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_animationLabel</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">568</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
</span><span class='line'>  <span class="n">_animationLabel</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">_animationLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//スライドインアニメーション</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">slideInAnimation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//アニメーション開始</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">beginAnimations:</span><span class="nb">nil</span> <span class="nl">context:</span><span class="nb">NULL</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーション秒数</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDuration:</span><span class="mf">1.0f</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//デリゲート指定</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーションの目標値を指定</span>
</span><span class='line'>  <span class="p">[</span><span class="n">_animationLabel</span> <span class="nl">setFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
</span><span class='line'>  <span class="c1">//アニメーション実行</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="n">commitAnimations</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-Cのスライドインアニメーション]]></title>
    <link href="http://lab.dolice.net/blog/2013/05/07/objc-commit-animations-slide-in/"/>
    <updated>2013-05-07T19:55:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/05/07/objc-commit-animations-slide-in</id>
    <content type="html"><![CDATA[<p>Objective-Cでスライドインアニメーションを実装するサンプルを以下に作成しました。</p>

<p>サンプルでは、ラベルが1秒間かけて下からスライドインするようアニメーションを指定しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-commit-animations-slide-in">https://github.com/masakihirokawa/objc-commit-animations-slide-in</a></li>
</ul>


<h2>アニメーションの実行</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//スライドインアニメーション</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">slideInAnimation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//アニメーション開始</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">beginAnimations:</span><span class="nb">nil</span> <span class="nl">context:</span><span class="nb">NULL</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーション秒数</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDuration:</span><span class="mf">1.0f</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//デリゲート指定</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーションの目標値を指定</span>
</span><span class='line'>  <span class="p">[</span><span class="n">_animationLabel</span> <span class="nl">setFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
</span><span class='line'>  <span class="c1">//アニメーション実行</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="n">commitAnimations</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーションさせるラベル</span>
</span><span class='line'><span class="k">@property</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">animationLabel</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーションさせるラベルを初期化</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initAnimationLabel</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//スライドインアニメーション</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">slideInAnimation</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーションさせるラベルを初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initAnimationLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_animationLabel</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">568</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
</span><span class='line'>  <span class="n">_animationLabel</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">blueColor</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">_animationLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//スライドインアニメーション</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">slideInAnimation</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//アニメーション開始</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">beginAnimations:</span><span class="nb">nil</span> <span class="nl">context:</span><span class="nb">NULL</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーション秒数</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDuration:</span><span class="mf">1.0f</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//デリゲート指定</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーションの目標値を指定</span>
</span><span class='line'>  <span class="p">[</span><span class="n">_animationLabel</span> <span class="nl">setFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
</span><span class='line'>  <span class="c1">//アニメーション実行</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="n">commitAnimations</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOSアプリの売り上げやダウンロード数をチェックできるサービス]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/29/download-xcode-marketing/"/>
    <updated>2013-04-29T09:05:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/29/download-xcode-marketing</id>
    <content type="html"><![CDATA[<p><img src="http://lab.dolice.net/images/article/appfigures.png" title="AppFigures - Chart" alt="AppFigures - Chart" /></p>

<p>iPhone/iPadアプリのダウンロード数や売り上げ、ランキングやレビューをチェックできるサービスを幾つか試したところ、「<a href="http://appfigures.com" title="AppFigures">AppFigures</a>」と「<a href="http://www.ideaswarm.com/AppViz2.html" title="AppViz 2">AppViz 2</a>」の組み合わせが最も良いようでした。</p>

<p>他にも色々なサービスやアプリを試しましたので、以下に紹介させていただきます。どれか合うものが見つかれば幸いです。</p>

<h2>AppFigures</h2>

<ul>
<li><a href="http://appfigures.com">http://appfigures.com</a></li>
</ul>


<p>デイリーレポートをメールで送ってくれます。通貨の単位を日本円にも設定できますので、売り上げが非常に分り易いです。</p>

<h2>AppViz 2</h2>

<ul>
<li><a href="http://www.ideaswarm.com/AppViz2.html">http://www.ideaswarm.com/AppViz2.html</a></li>
</ul>


<p>こちらは Mac OSX向けのシェアウェアです。値段は $50ですが、30日間無料トライアルがあります。売り上げが日本円で表示され分り易いですし、レビューやランキングまでチェックでき非常にお薦めです。</p>

<h2>AppSales-Mobile</h2>

<ul>
<li><a href="https://github.com/omz/AppSales-Mobile">https://github.com/omz/AppSales-Mobile</a></li>
</ul>


<p>iPhoneにインストールして使用するタイプのレポートアプリです。日本円表示できないのが難点ですが、さくっと気軽にチェックしたい時はこちらが一番良いかもしれません。GitHubでソースファイルが公開されており、そこからダウンロードし端末にインストールして使用します。</p>

<h2>Distimo</h2>

<ul>
<li><a href="http://www.distimo.com">http://www.distimo.com</a></li>
</ul>


<p>日本円での表示も可能です。毎日レポートを送ってくれますが、週報のほうが分り易いため、「<a href="http://appfigures.com" title="AppFigures">AppFigures</a>」のデイリーレポートと併用するのが良いかもしれません。</p>

<h2>iPhone/Androidアプリマーケティングツール｜GrowingApp</h2>

<ul>
<li><a href="https://www.growingapp.jp">https://www.growingapp.jp</a></li>
</ul>


<p>収益レポートはないようですが、ランキングの推移や検索順位を見ることができます。他のサービスと併用すると良いと思います。</p>

<h2>まとめ</h2>

<p>色々なサービスやアプリを列挙しましたが、2週間ほど試用した結果、当方は「<a href="http://appfigures.com" title="AppFigures">AppFigures</a>」と「<a href="http://www.ideaswarm.com/AppViz2.html" title="AppViz 2">AppViz 2</a>」の組み合わせに落ち着きました。今後、他にも良いサービスを見つけたら紹介して行きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneアプリに「LINEで送る」ボタンを組み込むサンプル]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/26/download-objc-send-to-line/"/>
    <updated>2013-04-26T22:32:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/26/download-objc-send-to-line</id>
    <content type="html"><![CDATA[<p>「LINEで送る」ボタンを iPhoneアプリに搭載するサンプルを作成しました。テキストフィールドに文字入力してボタンを押すと、LINEに送ることができます。下記よりサンプルのダウンロードが行えます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-send-to-line">https://github.com/masakihirokawa/objc-send-to-line</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initSendToLineButton</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initTextField</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//LINEで送るボタン初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initSendToLineButton</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">UIButton</span> <span class="o">*</span><span class="n">button</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeRoundedRect</span><span class="p">];</span>
</span><span class='line'>  <span class="n">button</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">220</span><span class="p">,</span> <span class="mi">36</span><span class="p">);</span>
</span><span class='line'>  <span class="p">[</span><span class="n">button</span> <span class="nl">setTitle:</span><span class="s">@&quot;LINE で送る&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">button</span> <span class="nl">addTarget:</span><span class="n">self</span>
</span><span class='line'>             <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">sendToLineButtonWasTapped:</span><span class="p">)</span>
</span><span class='line'>   <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">button</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//LINEで送る</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">sendToLineButtonWasTapped:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">plainString</span> <span class="o">=</span> <span class="n">_textField</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">contentKey</span> <span class="o">=</span> <span class="p">(</span><span class="n">__bridge</span> <span class="n">NSString</span> <span class="o">*</span><span class="p">)</span>
</span><span class='line'>    <span class="n">CFURLCreateStringByAddingPercentEscapes</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span>
</span><span class='line'>                                            <span class="p">(</span><span class="n">CFStringRef</span><span class="p">)</span><span class="n">plainString</span><span class="p">,</span>
</span><span class='line'>                                            <span class="nb">NULL</span><span class="p">,</span>
</span><span class='line'>                                            <span class="p">(</span><span class="n">CFStringRef</span><span class="p">)</span><span class="s">@&quot;!*&#39;();:@&amp;=+$,/?%#[]&quot;</span><span class="p">,</span>
</span><span class='line'>                                            <span class="n">kCFStringEncodingUTF8</span> <span class="p">);</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">contentType</span> <span class="o">=</span> <span class="s">@&quot;text&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">urlString</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span>
</span><span class='line'>                         <span class="nl">stringWithFormat:</span> <span class="s">@&quot;http://line.naver.jp/R/msg/%@/?%@&quot;</span><span class="p">,</span>
</span><span class='line'>                         <span class="n">contentType</span><span class="p">,</span> <span class="n">contentKey</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="n">urlString</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="nl">openURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストフィールド初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initTextField</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_textField</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITextField</span> <span class="n">alloc</span><span class="p">]</span>
</span><span class='line'>                <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">220</span><span class="p">,</span> <span class="mi">36</span><span class="p">)];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">_textField</span> <span class="nl">setBorderStyle:</span><span class="n">UITextBorderStyleRoundedRect</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">_textField</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[デリゲート経由でメソッドを呼び出す方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/25/objc-delegate/"/>
    <updated>2013-04-25T09:00:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/25/objc-delegate</id>
    <content type="html"><![CDATA[<p>デリゲート経由で外部メソッドを呼び出す方法とサンプルを以下にまとめました。</p>

<h2>必要な手順</h2>

<ol>
<li>呼び出し側のヘッダファイル(ここでは ViewController.h)でデリゲートを指定する</li>
<li>呼び出し側の実装ファイル(ViewController.m)に最終的に呼び出したいメソッドを記述する</li>
<li>外部クラスのヘッダファイル(MyClass.h)に protocol、デリゲート、最終的に呼び出したいメソッドを記述する</li>
<li>外部クラスの実装ファイル(MyClass.m)にデリゲートを synthesize宣言する</li>
</ol>


<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-delegate">https://github.com/masakihirokawa/objc-delegate</a></li>
</ul>


<h2>ソースコード</h2>

<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;MyClass.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ここでデリゲートを指定しておく</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span> <span class="o">&lt;</span><span class="n">SampleDelegate</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//MyClass初期化</span>
</span><span class='line'>  <span class="n">MyClass</span> <span class="o">*</span><span class="n">myClass</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//MyClassの delegateに自分自身を渡す</span>
</span><span class='line'>  <span class="n">myClass</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//MyClassのデリゲートメソッド呼び出し</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myClass</span> <span class="n">callDelegate</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//デリゲートメソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">sample</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;sample&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyClass.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//protocolを宣言しておく</span>
</span><span class='line'><span class="k">@protocol</span> <span class="nc">SampleDelegate</span>;
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyClass</span> : <span class="nc">UIViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//デリゲートを登録</span>
</span><span class='line'>  <span class="kt">id</span><span class="o">&lt;</span><span class="n">SampleDelegate</span><span class="o">&gt;</span> <span class="n">_delegate</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//デリゲートのプロパティ宣言</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">SampleDelegate</span><span class="o">&gt;</span> <span class="n">delegate</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ViewControllerから呼ばれるサンプルメソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">callDelegate</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark delegate prottype</span>
</span><span class='line'><span class="c1">//protocol宣言</span>
</span><span class='line'><span class="k">@protocol</span> <span class="nc">SampleDelegate</span><span class="o">&lt;</span><span class="n">NSObject</span><span class="o">&gt;</span>
</span><span class='line'><span class="c1">//デリゲート経由で呼ばれるメソッドを宣言</span>
</span><span class='line'><span class="k">@optional</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">sample</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyClass.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;MyClass.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyClass</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//delegateを宣言しておく</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">delegate</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithNibName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">nibNameOrNil</span> <span class="nf">bundle:</span><span class="p">(</span><span class="n">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="nv">nibBundleOrNil</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithNibName:</span><span class="n">nibNameOrNil</span> <span class="nl">bundle:</span><span class="n">nibBundleOrNil</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ViewControllerから呼ばれるメソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">callDelegate</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">delegate</span> <span class="n">sample</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトから全ての設定値を取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/25/objc-ns-user-defaults-dictionary-representation/"/>
    <updated>2013-04-25T07:45:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/25/objc-ns-user-defaults-dictionary-representation</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに保存した全ての設定値を取得するには、「dictionaryRepresentation」メソッドを使用します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-user-defaults-dictionary-representation">https://github.com/masakihirokawa/objc-user-defaults-dictionary-representation</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//全設定値を取得する</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionary</span> <span class="o">=</span> <span class="p">[</span><span class="n">userDefaults</span> <span class="n">dictionaryRepresentation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ファイルに書き込む</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="s">@&quot;~/Documents/setting.plist&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="n">path</span> <span class="n">stringByExpandingTildeInPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">dictionary</span> <span class="nl">writeToFile:</span><span class="n">path</span>
</span><span class='line'>               <span class="nl">atomically:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトの初期値を設定する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/25/objc-ns-user-defaults-register-defaults/"/>
    <updated>2013-04-25T06:35:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/25/objc-ns-user-defaults-register-defaults</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトの初期値を設定するには、「registerDefaults」メソッドを使用します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-user-default-register-defaults">https://github.com/masakihirokawa/objc-ns-user-default-register-defaults</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//デフォルト値を設定するために辞書を作成する</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionary</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dictionary</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys:</span>
</span><span class='line'>                <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInteger:</span><span class="mi">6</span><span class="p">],</span> <span class="s">@&quot;myValue&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトに初期値として設定する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">registerDefaults:</span><span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を読み込む</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">i</span> <span class="o">=</span> <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">integerForKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%ld&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//初期値が設定されていない場合は「0」になる</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">=</span> <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">integerForKey:</span><span class="s">@&quot;noneValue&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%ld&quot;</span><span class="p">,</span> <span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>6<br />
0</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[タグを指定してビューを追加/削除する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/24/objc-view-with-tag/"/>
    <updated>2013-04-24T19:56:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/24/objc-view-with-tag</id>
    <content type="html"><![CDATA[<p>グループを指定して要素を画面から削除するには、予め「tag=1」というように追加しておき、「[[self.view viewWithTag:1] removeFromSuperview];」と指定します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-view-with-tag">https://github.com/masakihirokawa/objc-view-with-tag</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setLabel</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setButton</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ラベル作成</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelWidth</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelHeight</span> <span class="o">=</span> <span class="mi">32</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelX</span> <span class="o">=</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">labelWidth</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelY</span> <span class="o">=</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">labelHeight</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>  <span class="n">UILabel</span> <span class="o">*</span><span class="n">myLabel</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="n">labelX</span><span class="p">,</span>
</span><span class='line'>                                                               <span class="n">labelY</span><span class="p">,</span>
</span><span class='line'>                                                               <span class="n">labelWidth</span><span class="p">,</span>
</span><span class='line'>                                                               <span class="n">labelHeight</span><span class="p">)];</span>
</span><span class='line'>  <span class="n">myLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;Sample&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myLabel</span><span class="p">.</span><span class="n">textAlignment</span> <span class="o">=</span> <span class="n">NSTextAlignmentCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//tagを指定して画面に追加</span>
</span><span class='line'>  <span class="n">myLabel</span><span class="p">.</span><span class="n">tag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">myLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//削除ボタン作成</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setButton</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">UIButton</span> <span class="o">*</span><span class="n">myButton</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeRoundedRect</span><span class="p">];</span>
</span><span class='line'>  <span class="n">myButton</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">18</span><span class="p">);</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myButton</span> <span class="nl">setTitle:</span><span class="s">@&quot;Remove&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myButton</span> <span class="nl">addTarget:</span><span class="n">self</span>
</span><span class='line'>               <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">buttonTapEvent:</span><span class="p">)</span>
</span><span class='line'>     <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myButton</span> <span class="n">sizeToFit</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">myButton</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//削除ボタンのタップイベント</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">buttonTapEvent:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">removeLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ラベルの削除</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">removeLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//タグを指定して画面から削除</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">viewWithTag:</span><span class="mi">1</span><span class="p">]</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトから設定値を読み込む]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/24/objc-ns-user-defaults-object-for-key/"/>
    <updated>2013-04-24T10:40:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/24/objc-ns-user-defaults-object-for-key</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに保存した設定値を取得するには、「objectForKey」メソッドを使用して、取得したい設定値のキーを指定します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-user-defaults-object-for-key">https://github.com/masakihirokawa/objc-ns-user-defaults-object-for-key</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を取得する</span>
</span><span class='line'>  <span class="n">NSNumber</span> <span class="o">*</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">objectForKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>6</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトから設定値を削除する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/23/objc-remove-ns-user-defaults/"/>
    <updated>2013-04-23T09:43:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/23/objc-remove-ns-user-defaults</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに保存した設定値を削除するには、「removeObjectForKey」メソッドを使用して、削除したい設定値のキーを指定します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-remove-user-defaults">https://github.com/masakihirokawa/objc-remove-user-defaults</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span> <span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を削除する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">removeObjectForKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ファイルに反映する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="n">synchronize</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトに設定値を保存する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/22/objc-ns-user-defaults/"/>
    <updated>2013-04-22T10:39:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/22/objc-ns-user-defaults</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに設定値を保存するサンプルを以下に作成しました。</p>

<p>このコードを実行すると、「~/Library/Preferences/SaveUserDefaults.plist」にファイルが作成され、設定値が保存されます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-user-defaults2">https://github.com/masakihirokawa/objc-ns-user-defaults2</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;settingValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ファイルに反映する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="n">synchronize</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通知センターから通知を受け取るサンプル]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/21/objc-ns-notification-center/"/>
    <updated>2013-04-21T11:34:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/21/objc-ns-notification-center</id>
    <content type="html"><![CDATA[<p>通知センターから通知を受け取るために必要なコードを記載しました。このコードを実行すると、「Notification」という文字列が出力され、通知を受け取れたことが判ります。</p>

<p>下記よりサンプルのダウンロードが行えます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-notification-center">https://github.com/masakihirokawa/objc-ns-notification-center</a></li>
</ul>


<h2>ソースコード</h2>

<h3>MyObject.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyObject</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">post</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyObject.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;MyObject.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">post</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//通知センターの取得</span>
</span><span class='line'>  <span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">notificationCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="n">notificationCenter</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//追加情報に文字列を代入</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionary</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dictionary</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObject:</span><span class="s">@&quot;Notification&quot;</span>
</span><span class='line'>                                           <span class="nl">forKey:</span><span class="s">@&quot;String&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//通知する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">notificationCenter</span> <span class="nl">postNotificationName:</span><span class="s">@&quot;MyNotification&quot;</span>
</span><span class='line'>                                    <span class="nl">object:</span><span class="n">self</span>
</span><span class='line'>                                  <span class="nl">userInfo:</span><span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyObserver.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyObserver</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyObserver.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;MyObserver.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyObserver</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">init</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//通知を受け取ったら「myNotification」メソッドを呼び出すようにする</span>
</span><span class='line'>    <span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">notificationCenter</span><span class="p">;</span>
</span><span class='line'>    <span class="n">notificationCenter</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">notificationCenter</span> <span class="nl">addObserver:</span><span class="n">self</span>
</span><span class='line'>                           <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">myNotification:</span><span class="p">)</span>
</span><span class='line'>                               <span class="nl">name:</span><span class="s">@&quot;MyNotification&quot;</span>
</span><span class='line'>                             <span class="nl">object:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dialloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスが破棄される前に通知センターの登録を解除</span>
</span><span class='line'>  <span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">notificationCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="n">notificationCenter</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">notificationCenter</span> <span class="nl">removeObserver:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">myNotification:</span><span class="p">(</span><span class="n">NSNotification</span> <span class="o">*</span><span class="p">)</span><span class="nv">aNotification</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//追加情報を取得する</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">userInfo</span> <span class="o">=</span> <span class="p">[</span><span class="n">aNotification</span> <span class="n">userInfo</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="p">[</span><span class="n">userInfo</span> <span class="nl">objectForKey:</span><span class="s">@&quot;String&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;MyObject.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;MyObserver.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="n">MyObject</span> <span class="o">*</span><span class="n">obj</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyObject</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">MyObserver</span> <span class="o">*</span><span class="n">observer</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyObserver</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">obj</span> <span class="n">post</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>Notification</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[セレクタの文字列からセレクタを取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/21/objc-ns-selector-from-string/"/>
    <updated>2013-04-21T10:57:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/21/objc-ns-selector-from-string</id>
    <content type="html"><![CDATA[<p>セレクタの文字列からセレクタを取得するサンプルを以下に作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-selector-from-string">https://github.com/masakihirokawa/objc-ns-selector-from-string</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//文字列からセレクタを取得する</span>
</span><span class='line'>  <span class="kt">SEL</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(</span><span class="s">@&quot;description&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//セレクタを比較して取得できたか確認する</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">selector</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="n">description</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;description&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Unknown&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>description</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[特定のクラスのインスタンスか調べる]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/20/objc-is-kind-of-class/"/>
    <updated>2013-04-20T16:10:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/20/objc-is-kind-of-class</id>
    <content type="html"><![CDATA[<p>オブジェクトが特定のクラスのインスタンスか調べるには、「isKindOfClass」メソッドを使用します。以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-is-kind-of-class">https://github.com/masakihirokawa/objc-is-kind-of-class</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">obj</span> <span class="o">=</span> <span class="s">@&quot;Sample String&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//NSStringクラスか、そのサブクラスかを調べる</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">isNSString</span> <span class="o">=</span> <span class="p">[</span><span class="n">obj</span> <span class="nl">isKindOfClass:</span><span class="p">[</span><span class="n">NSString</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;isKindOfClass:NSString=%d&quot;</span><span class="p">,</span> <span class="n">isNSString</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//NSArrayクラスか、そのサブクラスかを調べる</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">isNSArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">obj</span> <span class="nl">isKindOfClass:</span><span class="p">[</span><span class="n">NSArray</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;isKindOfClass:NSArray=%d&quot;</span><span class="p">,</span> <span class="n">isNSArray</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>isKindOfClass:NSString=1<br />
isKindOfClass:NSArray=0</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[コマ送りアニメーションの最後の画像を消さないようにする方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/19/objc-start-animating-not-eraze-last-frame/"/>
    <updated>2013-04-19T16:07:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/19/objc-start-animating-not-eraze-last-frame</id>
    <content type="html"><![CDATA[<p><img src="http://lab.dolice.net/images/article/frame-by-frame-animation.jpg" alt="" /></p>

<p>コマ送りアニメーションを「startAnimating」メソッドを使用して実装する際、アニメーションのリピート回数を1等に設定すると最後の画像が消えてしまうのですが、これを消さないようにするには UIImageViewに最後のイメージを指定しておくと消える事がなくなり解決します。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-start-animating-not-eraze-last-frame">https://github.com/masakihirokawa/objc-start-animating-not-eraze-last-frame</a></li>
</ul>


<h2>該当部分のソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//最後のフレームのアニメーション画像を消さないようにする</span>
</span><span class='line'><span class="n">_animationImageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">FrameByFrameAnimation</span> <span class="n">getUIImageFromResources</span>
</span><span class='line'>  <span class="o">:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@%@&quot;</span><span class="p">,</span> <span class="n">animationImageSuffix</span><span class="p">,</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%d&quot;</span><span class="p">,</span> <span class="n">animationImageNum</span><span class="p">]]</span>
</span><span class='line'>  <span class="nl">ext:</span><span class="s">@&quot;png&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-Cでメンバ変数をシンプルに宣言する方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/19/objc-property/"/>
    <updated>2013-04-19T16:05:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/19/objc-property</id>
    <content type="html"><![CDATA[<p>Objective-Cでメンバ変数を宣言する場合、ヘッダファイルに @propertyを記述し、実装ファイルに @synthesize宣言を入れるのが一般的ですが、実装ファイルに @propertyを宣言するだけでも問題ないようです。この方がシンプルに記述でき、機密性も保たれるのと、setter/getterの役割も兼ねてくれるので良いですね。</p>

<p>以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-propetry-and-synthesize">https://github.com/masakihirokawa/objc-propetry-and-synthesize</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">sampleStr</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="kt">int</span> <span class="n">sampleInt</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="kt">BOOL</span> <span class="n">sampleBool</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">debugStr</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">debugInt</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">debugBool</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_sampleStr</span> <span class="o">=</span> <span class="s">@&quot;サンプル&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">_sampleInt</span> <span class="o">=</span> <span class="mi">777</span><span class="p">;</span>
</span><span class='line'>  <span class="n">_sampleBool</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugStr</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;_sampleStr: %@&quot;</span><span class="p">,</span> <span class="n">_sampleStr</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;self.sampleStr: %@&quot;</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleStr</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;[self sampleStr]: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">sampleStr</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugInt</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;_sampleInt: %d&quot;</span><span class="p">,</span> <span class="n">_sampleInt</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;self.sampleInt: %d&quot;</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleInt</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;[self sampleInt]: %d&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">sampleInt</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugBool</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;_sampleBool: %d&quot;</span><span class="p">,</span> <span class="n">_sampleBool</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;self.sampleBool: %d&quot;</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleBool</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;[self sampleBool]: %d&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">sampleBool</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>サンプル<br />
777<br />
YES</p></blockquote>

<h2>参考サイト</h2>

<p><a href="http://qiita.com/items/8bcd083e59d68ad94927" title="Modern Objective-Cでのシンプルなプロパティ記述方式">Modern Objective-Cでのシンプルなプロパティ記述方式</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[クラス名からクラスを取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/19/objc-ns-class-from-string/"/>
    <updated>2013-04-19T10:33:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/19/objc-ns-class-from-string</id>
    <content type="html"><![CDATA[<p>クラス名からクラスを取得するには、「NSClassFromString」を使用します。以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-class-from-string">https://github.com/masakihirokawa/objc-ns-class-from-string</a></li>
</ul>


<h2>ソースコード</h2>

<h3>MyClass.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">description</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">(</span><span class="s">@&quot;MyClass Instance&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//クラス名からクラスを取得する</span>
</span><span class='line'>  <span class="n">Class</span> <span class="n">myClass</span> <span class="o">=</span> <span class="n">NSClassFromString</span><span class="p">(</span><span class="s">@&quot;MyClass&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">obj</span> <span class="o">=</span> <span class="p">[[</span><span class="n">myClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">obj</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>MyClass Instance</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XMLパーサのサンプルを作成しました]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/18/download-objc-xml-parser/"/>
    <updated>2013-04-18T20:44:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/18/download-objc-xml-parser</id>
    <content type="html"><![CDATA[<p>Objective-Cで XMLファイルを解析し、タグ名／属性／要素をテキストビューに表示するサンプルを以下に作成しました。</p>

<p>サンプルでは、「game」というキーワードを基に XMLを解析しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-xml-parser">https://github.com/masakihirokawa/objc-xml-parser</a></li>
</ul>


<h2>XMLファイル</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-xml-parser/blob/master/sample.xml">https://github.com/masakihirokawa/objc-xml-parser/blob/master/sample.xml</a></li>
</ul>


<h2>ソースコード</h2>

<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span> <span class="o">&lt;</span><span class="n">NSXMLParserDelegate</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">nowTagStr</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">txtBuffer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UITextView</span> <span class="o">*</span><span class="n">textView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//テキストビューの初期化</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initTextView</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//URLを指定してXMLパーサーを作る</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setXMLParser</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストビューの初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initTextView</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">textView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITextView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">260</span><span class="p">,</span> <span class="mi">508</span><span class="p">)];</span>
</span><span class='line'>  <span class="c1">//テキストビューを空欄にする</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//テキストビューを編集不可に設定</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">editable</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//テキストビューを画面に追加</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//URLを指定してXMLパーサーを作る</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setXMLParser</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//XMLを読み込む</span>
</span><span class='line'>  <span class="n">NSURL</span> <span class="o">*</span><span class="n">myURL</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="s">@&quot;http://dolice.net/sample/ios/XMLParser/sample.xml&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//XMLパーサを初期化</span>
</span><span class='line'>  <span class="n">NSXMLParser</span> <span class="o">*</span><span class="n">myParser</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSXMLParser</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithContentsOfURL:</span><span class="n">myURL</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//デリゲート指定</span>
</span><span class='line'>  <span class="n">myParser</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 解析を開始する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myParser</span> <span class="n">parse</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//解析開始時の処理</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parserDidStartDocument:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//解析中タグの初期化</span>
</span><span class='line'>  <span class="n">nowTagStr</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストビューに、タグ名と、price属性を追加する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parser:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span>
</span><span class='line'><span class="nf">didStartElement:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">elementName</span>
</span><span class='line'>  <span class="nf">namespaceURI:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">namespaceURI</span>
</span><span class='line'> <span class="nf">qualifiedName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">qName</span>
</span><span class='line'>    <span class="nf">attributes:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">attributeDict</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//開始タグが「game」だったら</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">elementName</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;game&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//解析中タグに設定</span>
</span><span class='line'>      <span class="n">nowTagStr</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithString:</span><span class="n">elementName</span><span class="p">];</span>
</span><span class='line'>      <span class="c1">//テキストバッファの初期化</span>
</span><span class='line'>      <span class="n">txtBuffer</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//テキストビューに、タグ名と、price属性を追加する</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="nl">stringByAppendingFormat:</span>
</span><span class='line'>                          <span class="s">@&quot;タグ名=[%@]</span><span class="se">\n</span><span class="s"> 属性 price=[%@]&quot;</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">elementName</span><span class="p">,</span> <span class="p">[</span><span class="n">attributeDict</span> <span class="nl">objectForKey:</span><span class="s">@&quot;price&quot;</span><span class="p">]];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストバッファに文字を追加する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parser:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span> <span class="nf">foundCharacters:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">string</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//解析中のタグが「game」だったら</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">nowTagStr</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;game&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//テキストバッファに文字を追加する</span>
</span><span class='line'>      <span class="n">txtBuffer</span> <span class="o">=</span> <span class="p">[</span><span class="n">txtBuffer</span> <span class="nl">stringByAppendingString:</span><span class="n">string</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストビューにテキストバッファの文字を追加する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parser:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span>
</span><span class='line'> <span class="nf">didEndElement:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">elementName</span>
</span><span class='line'>  <span class="nf">namespaceURI:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">namespaceURI</span>
</span><span class='line'> <span class="nf">qualifiedName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">qName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//終了タグが「game」だったら</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">elementName</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;game&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//テキストビューにテキストバッファの文字を追加する</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="nl">stringByAppendingFormat:</span>
</span><span class='line'>                          <span class="s">@&quot;</span><span class="se">\n</span><span class="s"> 要素=[%@]</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">txtBuffer</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneアプリをローカライズするまでの全スクリーンショット]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/17/xcode-localize/"/>
    <updated>2013-04-17T11:58:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/17/xcode-localize</id>
    <content type="html"><![CDATA[<p>iOSアプリをローカライズするまでの全スクリーンショットに手順を添えて紹介します。</p>

<p>下記にサンプルを用意しました。スクリーンショットも同梱しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/xcode-localize">https://github.com/masakihirokawa/xcode-localize</a></li>
</ul>


<h2>スクリーンショットとローカライズ手順</h2>

<h3>1. PROJECT -> info -> Localizationsの項目に Japaniese (ja)を追加する</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot1.png" title="1. PROJECT -&gt; info -&gt; Localizationsの項目に Japaniese (ja)を追加する" alt="1. PROJECT -&gt; info -&gt; Localizationsの項目に Japaniese (ja)を追加する" /></p>

<h3>2. MainStoryboard.storyboardと InfoPlist.stringsにチェックを入れて Finishを選択</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot2.png" title="2. MainStoryboard.storyboardと InfoPlist.stringsにチェックを入れて Finishを選択" alt="2. MainStoryboard.storyboardと InfoPlist.stringsにチェックを入れて Finishを選択" /></p>

<h3>3. MainStoryboardが複製され、Japanieseと Englishの2つに分かれました</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot3.png" title="3. MainStoryboardが複製され、Japanieseと Englishの2つに分かれました" alt="3. MainStoryboardが複製され、Japanieseと Englishの2つに分かれました" /></p>

<h3>4. Strings Filesを新規作成します</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot4.png" title="4. Strings Filesを新規作成します" alt="4. Strings Filesを新規作成します" /></p>

<h3>5. ファイル名を「Localizable.strings」にします</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot5.png" title="5. ファイル名を「Localizable.strings」にします" alt="5. ファイル名を「Localizable.strings」にします" /></p>

<h3>6. 作成した Localizable.stringsファイルを選択し、「Localize…」ボタンを押します</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot6.png" title="6. 作成した Localizable.stringsファイルを選択し、「Localize…」ボタンを押します" alt="6. 作成した Localizable.stringsファイルを選択し、「Localize…」ボタンを押します" /></p>

<h3>7. Englishと Japanieseの両方にチェックを入れます</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot7.png" title="7. Englishと Japanieseの両方にチェックを入れます" alt="7. Englishと Japanieseの両方にチェックを入れます" /></p>

<h3>8. Localizable.stringsファイルに各国の単語を定義します</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot8.png" title="8. Localizable.stringsファイルに各国の単語を定義します" alt="8. Localizable.stringsファイルに各国の単語を定義します" /></p>

<h3>9. アプリ名とアプリアイコンの下に表示される名前を指定することも出来ます</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot9.png" title="9. アプリ名とアプリアイコンの下に表示される名前を指定することも出来ます" alt="9. アプリ名とアプリアイコンの下に表示される名前を指定することも出来ます" /></p>

<h3>10. 「NSLocalizedStrings」にキーワードを指定すると、各国語に対応した単語が表示されます</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot10.png" title="10. 「NSLocalizedStrings」にキーワードを指定すると、各国語に対応した単語が表示されます" alt="10. 「NSLocalizedStrings」にキーワードを指定すると、各国語に対応した単語が表示されます" /></p>

<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">@&quot;AppName&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<h3>システム言語を英語に設定していた場合</h3>

<blockquote><p>My Apps</p></blockquote>

<h3>システム言語を日本語に設定していた場合</h3>

<blockquote><p>マイアプリ</p></blockquote>
]]></content>
  </entry>
  
</feed>
