<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dolice Lab]]></title>
  <link href="http://lab.dolice.net/atom.xml" rel="self"/>
  <link href="http://lab.dolice.net/"/>
  <updated>2013-04-25T22:37:11+09:00</updated>
  <id>http://lab.dolice.net/</id>
  <author>
    <name><![CDATA[Masaki Hirokawa]]></name>
    <email><![CDATA[masakihirokawa@gmai.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[デリゲート経由でメソッドを呼び出す方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/25/objc-delegate/"/>
    <updated>2013-04-25T09:00:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/25/objc-delegate</id>
    <content type="html"><![CDATA[<p>デリゲート経由で外部メソッドを呼び出す方法とサンプルを以下にまとめました。</p>

<h2>必要な手順</h2>

<ol>
<li>呼び出し側のヘッダファイル(ここでは ViewController.h)でデリゲートを指定する</li>
<li>呼び出し側の実装ファイル(ViewController.m)に最終的に呼び出したいメソッドを記述する</li>
<li>外部クラスのヘッダファイル(MyClass.h)に protocol、デリゲート、最終的に呼び出したいメソッドを記述する</li>
<li>外部クラスの実装ファイル(MyClass.m)にデリゲートを synthesize宣言する</li>
</ol>


<p>下記よりサンプルのダウンロードが行えます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-delegate">https://github.com/masakihirokawa/objc-delegate</a></li>
</ul>


<h2>ソースコード</h2>

<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;MyClass.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ここでデリゲートを指定しておく</span>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span> <span class="o">&lt;</span><span class="n">SampleDelegate</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//MyClass初期化</span>
</span><span class='line'>  <span class="n">MyClass</span> <span class="o">*</span><span class="n">myClass</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//MyClassの delegateに自分自身を渡す</span>
</span><span class='line'>  <span class="n">myClass</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//MyClassのデリゲートメソッド呼び出し</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myClass</span> <span class="n">callDelegate</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//デリゲートメソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">sample</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;sample&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyClass.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//protocolを宣言しておく</span>
</span><span class='line'><span class="k">@protocol</span> <span class="nc">SampleDelegate</span>;
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyClass</span> : <span class="nc">UIViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">//デリゲートを登録</span>
</span><span class='line'>  <span class="kt">id</span><span class="o">&lt;</span><span class="n">SampleDelegate</span><span class="o">&gt;</span> <span class="n">_delegate</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//デリゲートのプロパティ宣言</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">nonatomic</span><span class="p">,</span> <span class="n">assign</span><span class="p">)</span> <span class="kt">id</span><span class="o">&lt;</span><span class="n">SampleDelegate</span><span class="o">&gt;</span> <span class="n">delegate</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ViewControllerから呼ばれるサンプルメソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">callDelegate</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark delegate prottype</span>
</span><span class='line'><span class="c1">//protocol宣言</span>
</span><span class='line'><span class="k">@protocol</span> <span class="nc">SampleDelegate</span><span class="o">&lt;</span><span class="n">NSObject</span><span class="o">&gt;</span>
</span><span class='line'><span class="c1">//デリゲート経由で呼ばれるメソッドを宣言</span>
</span><span class='line'><span class="k">@optional</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">sample</span><span class="p">;</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyClass.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;MyClass.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyClass</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//delegateを宣言しておく</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">delegate</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">initWithNibName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">nibNameOrNil</span> <span class="nf">bundle:</span><span class="p">(</span><span class="n">NSBundle</span> <span class="o">*</span><span class="p">)</span><span class="nv">nibBundleOrNil</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nl">initWithNibName:</span><span class="n">nibNameOrNil</span> <span class="nl">bundle:</span><span class="n">nibBundleOrNil</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ViewControllerから呼ばれるメソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">callDelegate</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">delegate</span> <span class="n">sample</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトから全ての設定値を取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/25/objc-ns-user-defaults-dictionary-representation/"/>
    <updated>2013-04-25T07:45:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/25/objc-ns-user-defaults-dictionary-representation</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに保存した全ての設定値を取得するには、「dictionaryRepresentation」メソッドを使用します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-user-defaults-dictionary-representation">https://github.com/masakihirokawa/objc-user-defaults-dictionary-representation</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//全設定値を取得する</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionary</span> <span class="o">=</span> <span class="p">[</span><span class="n">userDefaults</span> <span class="n">dictionaryRepresentation</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ファイルに書き込む</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="s">@&quot;~/Documents/setting.plist&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="n">path</span> <span class="n">stringByExpandingTildeInPath</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">dictionary</span> <span class="nl">writeToFile:</span><span class="n">path</span>
</span><span class='line'>               <span class="nl">atomically:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[タグを指定してビューを追加/削除する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/24/objc-view-with-tag/"/>
    <updated>2013-04-24T19:56:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/24/objc-view-with-tag</id>
    <content type="html"><![CDATA[<p>グループを指定して要素を画面から削除するには、予め「tag=1」というように追加しておき、「[[self.view viewWithTag:1] removeFromSuperview];」と指定します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-view-with-tag">https://github.com/masakihirokawa/objc-view-with-tag</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setLabel</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setButton</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ラベル作成</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelWidth</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelHeight</span> <span class="o">=</span> <span class="mi">32</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelX</span> <span class="o">=</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">labelWidth</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSInteger</span> <span class="n">labelY</span> <span class="o">=</span> <span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">labelHeight</span> <span class="o">/</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>  <span class="n">UILabel</span> <span class="o">*</span><span class="n">myLabel</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="n">labelX</span><span class="p">,</span>
</span><span class='line'>                                                               <span class="n">labelY</span><span class="p">,</span>
</span><span class='line'>                                                               <span class="n">labelWidth</span><span class="p">,</span>
</span><span class='line'>                                                               <span class="n">labelHeight</span><span class="p">)];</span>
</span><span class='line'>  <span class="n">myLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;Sample&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">myLabel</span><span class="p">.</span><span class="n">textAlignment</span> <span class="o">=</span> <span class="n">NSTextAlignmentCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//tagを指定して画面に追加</span>
</span><span class='line'>  <span class="n">myLabel</span><span class="p">.</span><span class="n">tag</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">myLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//削除ボタン作成</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setButton</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">UIButton</span> <span class="o">*</span><span class="n">myButton</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeRoundedRect</span><span class="p">];</span>
</span><span class='line'>  <span class="n">myButton</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="mi">18</span><span class="p">,</span> <span class="mi">18</span><span class="p">);</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myButton</span> <span class="nl">setTitle:</span><span class="s">@&quot;Remove&quot;</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myButton</span> <span class="nl">addTarget:</span><span class="n">self</span>
</span><span class='line'>               <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">buttonTapEvent:</span><span class="p">)</span>
</span><span class='line'>     <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myButton</span> <span class="n">sizeToFit</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">myButton</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//削除ボタンのタップイベント</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">buttonTapEvent:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">removeLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ラベルの削除</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">removeLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//タグを指定して画面から削除</span>
</span><span class='line'>  <span class="p">[[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">viewWithTag:</span><span class="mi">1</span><span class="p">]</span> <span class="n">removeFromSuperview</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトから設定値を読み込む]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/24/objc-ns-user-defaults-object-for-key/"/>
    <updated>2013-04-24T10:40:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/24/objc-ns-user-defaults-object-for-key</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに保存した設定値を取得するには、「objectForKey」メソッドを使用して、取得したい設定値のキーを指定します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-user-defaults-object-for-key">https://github.com/masakihirokawa/objc-ns-user-defaults-object-for-key</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を取得する</span>
</span><span class='line'>  <span class="n">NSNumber</span> <span class="o">*</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>  <span class="n">value</span> <span class="o">=</span> <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">objectForKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>6</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトから設定値を削除する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/23/objc-remove-ns-user-defaults/"/>
    <updated>2013-04-23T09:43:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/23/objc-remove-ns-user-defaults</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに保存した設定値を削除するには、「removeObjectForKey」メソッドを使用して、削除したい設定値のキーを指定します。下記にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-remove-user-defaults">https://github.com/masakihirokawa/objc-remove-user-defaults</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span> <span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を削除する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">removeObjectForKey:</span><span class="s">@&quot;myValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ファイルに反映する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="n">synchronize</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ユーザーデフォルトに設定値を保存する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/22/objc-ns-user-defaults/"/>
    <updated>2013-04-22T10:39:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/22/objc-ns-user-defaults</id>
    <content type="html"><![CDATA[<p>ユーザーデフォルトに設定値を保存するサンプルを以下に作成しました。</p>

<p>このコードを実行すると、「~/Library/Preferences/SaveUserDefaults.plist」にファイルが作成され、設定値が保存されます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-user-defaults2">https://github.com/masakihirokawa/objc-ns-user-defaults2</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ユーザーデフォルトを取得する</span>
</span><span class='line'>  <span class="n">NSUserDefaults</span> <span class="o">*</span><span class="n">userDefaults</span><span class="p">;</span>
</span><span class='line'>  <span class="n">userDefaults</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSUserDefaults</span> <span class="n">standardUserDefaults</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//設定値を保存する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="nl">setInteger:</span><span class="mi">6</span>
</span><span class='line'>                    <span class="nl">forKey:</span><span class="s">@&quot;settingValue&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//ファイルに反映する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">userDefaults</span> <span class="n">synchronize</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通知センターから通知を受け取るサンプル]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/21/objc-ns-notification-center/"/>
    <updated>2013-04-21T11:34:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/21/objc-ns-notification-center</id>
    <content type="html"><![CDATA[<p>通知センターから通知を受け取るために必要なコードを記載しました。このコードを実行すると、「Notification」という文字列が出力され、通知を受け取れたことが判ります。</p>

<p>下記よりサンプルのダウンロードが行えます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-notification-center">https://github.com/masakihirokawa/objc-ns-notification-center</a></li>
</ul>


<h2>ソースコード</h2>

<h3>MyObject.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyObject</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">post</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyObject.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;MyObject.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">post</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//通知センターの取得</span>
</span><span class='line'>  <span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">notificationCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="n">notificationCenter</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//追加情報に文字列を代入</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dictionary</span><span class="p">;</span>
</span><span class='line'>  <span class="n">dictionary</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObject:</span><span class="s">@&quot;Notification&quot;</span>
</span><span class='line'>                                           <span class="nl">forKey:</span><span class="s">@&quot;String&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//通知する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">notificationCenter</span> <span class="nl">postNotificationName:</span><span class="s">@&quot;MyNotification&quot;</span>
</span><span class='line'>                                    <span class="nl">object:</span><span class="n">self</span>
</span><span class='line'>                                  <span class="nl">userInfo:</span><span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyObserver.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;Foundation/Foundation.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">MyObserver</span> : <span class="nc">NSObject</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>MyObserver.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;MyObserver.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">MyObserver</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nf">init</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//通知を受け取ったら「myNotification」メソッドを呼び出すようにする</span>
</span><span class='line'>    <span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">notificationCenter</span><span class="p">;</span>
</span><span class='line'>    <span class="n">notificationCenter</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">notificationCenter</span> <span class="nl">addObserver:</span><span class="n">self</span>
</span><span class='line'>                           <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">myNotification:</span><span class="p">)</span>
</span><span class='line'>                               <span class="nl">name:</span><span class="s">@&quot;MyNotification&quot;</span>
</span><span class='line'>                             <span class="nl">object:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">dialloc</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスが破棄される前に通知センターの登録を解除</span>
</span><span class='line'>  <span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">notificationCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="n">notificationCenter</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">notificationCenter</span> <span class="nl">removeObserver:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">myNotification:</span><span class="p">(</span><span class="n">NSNotification</span> <span class="o">*</span><span class="p">)</span><span class="nv">aNotification</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//追加情報を取得する</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">userInfo</span> <span class="o">=</span> <span class="p">[</span><span class="n">aNotification</span> <span class="n">userInfo</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="p">[</span><span class="n">userInfo</span> <span class="nl">objectForKey:</span><span class="s">@&quot;String&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'><span class="cp">#import &quot;MyObject.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;MyObserver.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="n">MyObject</span> <span class="o">*</span><span class="n">obj</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyObject</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="n">MyObserver</span> <span class="o">*</span><span class="n">observer</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyObserver</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">[</span><span class="n">obj</span> <span class="n">post</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>Notification</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[セレクタの文字列からセレクタを取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/21/objc-ns-selector-from-string/"/>
    <updated>2013-04-21T10:57:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/21/objc-ns-selector-from-string</id>
    <content type="html"><![CDATA[<p>セレクタの文字列からセレクタを取得するサンプルを以下に作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-selector-from-string">https://github.com/masakihirokawa/objc-ns-selector-from-string</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//文字列からセレクタを取得する</span>
</span><span class='line'>  <span class="kt">SEL</span> <span class="n">selector</span> <span class="o">=</span> <span class="n">NSSelectorFromString</span><span class="p">(</span><span class="s">@&quot;description&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//セレクタを比較して取得できたか確認する</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">selector</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="n">description</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;description&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Unknown&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>description</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[特定のクラスのインスタンスか調べる]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/20/objc-is-kind-of-class/"/>
    <updated>2013-04-20T16:10:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/20/objc-is-kind-of-class</id>
    <content type="html"><![CDATA[<p>オブジェクトが特定のクラスのインスタンスか調べるには、「isKindOfClass」メソッドを使用します。以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-is-kind-of-class">https://github.com/masakihirokawa/objc-is-kind-of-class</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">obj</span> <span class="o">=</span> <span class="s">@&quot;Sample String&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//NSStringクラスか、そのサブクラスかを調べる</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">isNSString</span> <span class="o">=</span> <span class="p">[</span><span class="n">obj</span> <span class="nl">isKindOfClass:</span><span class="p">[</span><span class="n">NSString</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;isKindOfClass:NSString=%d&quot;</span><span class="p">,</span> <span class="n">isNSString</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//NSArrayクラスか、そのサブクラスかを調べる</span>
</span><span class='line'>  <span class="kt">BOOL</span> <span class="n">isNSArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">obj</span> <span class="nl">isKindOfClass:</span><span class="p">[</span><span class="n">NSArray</span> <span class="n">class</span><span class="p">]];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;isKindOfClass:NSArray=%d&quot;</span><span class="p">,</span> <span class="n">isNSArray</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>isKindOfClass:NSString=1<br />
isKindOfClass:NSArray=0</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[コマ送りアニメーションの最後の画像を消さないようにする方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/19/objc-start-animating-not-eraze-last-frame/"/>
    <updated>2013-04-19T16:07:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/19/objc-start-animating-not-eraze-last-frame</id>
    <content type="html"><![CDATA[<p><img src="http://lab.dolice.net/images/article/frame-by-frame-animation.jpg" alt="" /></p>

<p>コマ送りアニメーションを「startAnimating」メソッドを使用して実装する際、アニメーションのリピート回数を1等に設定すると最後の画像が消えてしまうのですが、これを消さないようにするには UIImageViewに最後のイメージを指定しておくと消える事がなくなり解決します。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-start-animating-not-eraze-last-frame">https://github.com/masakihirokawa/objc-start-animating-not-eraze-last-frame</a></li>
</ul>


<h2>該当部分のソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">//最後のフレームのアニメーション画像を消さないようにする</span>
</span><span class='line'><span class="n">_animationImageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">FrameByFrameAnimation</span> <span class="n">getUIImageFromResources</span>
</span><span class='line'>  <span class="o">:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@%@&quot;</span><span class="p">,</span> <span class="n">animationImageSuffix</span><span class="p">,</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%d&quot;</span><span class="p">,</span> <span class="n">animationImageNum</span><span class="p">]]</span>
</span><span class='line'>  <span class="nl">ext:</span><span class="s">@&quot;png&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-Cでメンバ変数をシンプルに宣言する方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/19/objc-property/"/>
    <updated>2013-04-19T16:05:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/19/objc-property</id>
    <content type="html"><![CDATA[<p>Objective-Cでメンバ変数を宣言する場合、ヘッダファイルに @propertyを記述し、実装ファイルに @synthesize宣言を入れるのが一般的ですが、実装ファイルに @propertyを宣言するだけでも問題ないようです。この方がシンプルに記述でき、機密性も保たれるのと、setter/getterの役割も兼ねてくれるので良いですね。</p>

<p>以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-propetry-and-synthesize">https://github.com/masakihirokawa/objc-propetry-and-synthesize</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="n">NSString</span> <span class="o">*</span><span class="n">sampleStr</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="kt">int</span> <span class="n">sampleInt</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="kt">BOOL</span> <span class="n">sampleBool</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">debugStr</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">debugInt</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">debugBool</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">_sampleStr</span> <span class="o">=</span> <span class="s">@&quot;サンプル&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">_sampleInt</span> <span class="o">=</span> <span class="mi">777</span><span class="p">;</span>
</span><span class='line'>  <span class="n">_sampleBool</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugStr</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;_sampleStr: %@&quot;</span><span class="p">,</span> <span class="n">_sampleStr</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;self.sampleStr: %@&quot;</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleStr</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;[self sampleStr]: %@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">sampleStr</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugInt</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;_sampleInt: %d&quot;</span><span class="p">,</span> <span class="n">_sampleInt</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;self.sampleInt: %d&quot;</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleInt</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;[self sampleInt]: %d&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">sampleInt</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">debugBool</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;_sampleBool: %d&quot;</span><span class="p">,</span> <span class="n">_sampleBool</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;self.sampleBool: %d&quot;</span><span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">sampleBool</span><span class="p">);</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;[self sampleBool]: %d&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span> <span class="n">sampleBool</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>サンプル<br />
777<br />
YES</p></blockquote>

<h2>参考サイト</h2>

<p><a href="http://qiita.com/items/8bcd083e59d68ad94927" title="Modern Objective-Cでのシンプルなプロパティ記述方式">Modern Objective-Cでのシンプルなプロパティ記述方式</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[クラス名からクラスを取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/19/objc-ns-class-from-string/"/>
    <updated>2013-04-19T10:33:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/19/objc-ns-class-from-string</id>
    <content type="html"><![CDATA[<p>クラス名からクラスを取得するには、「NSClassFromString」を使用します。以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-class-from-string">https://github.com/masakihirokawa/objc-ns-class-from-string</a></li>
</ul>


<h2>ソースコード</h2>

<h3>MyClass.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">@implementation</span> <span class="nc">MyClass</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nf">description</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">(</span><span class="s">@&quot;MyClass Instance&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//クラス名からクラスを取得する</span>
</span><span class='line'>  <span class="n">Class</span> <span class="n">myClass</span> <span class="o">=</span> <span class="n">NSClassFromString</span><span class="p">(</span><span class="s">@&quot;MyClass&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">obj</span> <span class="o">=</span> <span class="p">[[</span><span class="n">myClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">obj</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>MyClass Instance</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[XMLパーサのサンプルを作成しました]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/18/download-objc-xml-parser/"/>
    <updated>2013-04-18T20:44:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/18/download-objc-xml-parser</id>
    <content type="html"><![CDATA[<p>Objective-Cで XMLファイルを解析し、タグ名／属性／要素をテキストビューに表示するサンプルを以下に作成しました。</p>

<p>サンプルでは、「game」というキーワードを基に XMLを解析しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-xml-parser">https://github.com/masakihirokawa/objc-xml-parser</a></li>
</ul>


<h2>XMLファイル</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-xml-parser/blob/master/sample.xml">https://github.com/masakihirokawa/objc-xml-parser/blob/master/sample.xml</a></li>
</ul>


<h2>ソースコード</h2>

<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span> <span class="o">&lt;</span><span class="n">NSXMLParserDelegate</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">nowTagStr</span><span class="p">;</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">txtBuffer</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UITextView</span> <span class="o">*</span><span class="n">textView</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//テキストビューの初期化</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initTextView</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//URLを指定してXMLパーサーを作る</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setXMLParser</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストビューの初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initTextView</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">textView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UITextView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">260</span><span class="p">,</span> <span class="mi">508</span><span class="p">)];</span>
</span><span class='line'>  <span class="c1">//テキストビューを空欄にする</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//テキストビューを編集不可に設定</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">editable</span> <span class="o">=</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//テキストビューを画面に追加</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//URLを指定してXMLパーサーを作る</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setXMLParser</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//XMLを読み込む</span>
</span><span class='line'>  <span class="n">NSURL</span> <span class="o">*</span><span class="n">myURL</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span> <span class="nl">URLWithString:</span><span class="s">@&quot;http://dolice.net/sample/ios/XMLParser/sample.xml&quot;</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//XMLパーサを初期化</span>
</span><span class='line'>  <span class="n">NSXMLParser</span> <span class="o">*</span><span class="n">myParser</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSXMLParser</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithContentsOfURL:</span><span class="n">myURL</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//デリゲート指定</span>
</span><span class='line'>  <span class="n">myParser</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 解析を開始する</span>
</span><span class='line'>  <span class="p">[</span><span class="n">myParser</span> <span class="n">parse</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//解析開始時の処理</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parserDidStartDocument:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//解析中タグの初期化</span>
</span><span class='line'>  <span class="n">nowTagStr</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストビューに、タグ名と、price属性を追加する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parser:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span>
</span><span class='line'><span class="nf">didStartElement:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">elementName</span>
</span><span class='line'>  <span class="nf">namespaceURI:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">namespaceURI</span>
</span><span class='line'> <span class="nf">qualifiedName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">qName</span>
</span><span class='line'>    <span class="nf">attributes:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">attributeDict</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//開始タグが「game」だったら</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">elementName</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;game&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//解析中タグに設定</span>
</span><span class='line'>      <span class="n">nowTagStr</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithString:</span><span class="n">elementName</span><span class="p">];</span>
</span><span class='line'>      <span class="c1">//テキストバッファの初期化</span>
</span><span class='line'>      <span class="n">txtBuffer</span> <span class="o">=</span> <span class="s">@&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//テキストビューに、タグ名と、price属性を追加する</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="nl">stringByAppendingFormat:</span>
</span><span class='line'>                          <span class="s">@&quot;タグ名=[%@]</span><span class="se">\n</span><span class="s"> 属性 price=[%@]&quot;</span><span class="p">,</span>
</span><span class='line'>                          <span class="n">elementName</span><span class="p">,</span> <span class="p">[</span><span class="n">attributeDict</span> <span class="nl">objectForKey:</span><span class="s">@&quot;price&quot;</span><span class="p">]];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストバッファに文字を追加する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parser:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span> <span class="nf">foundCharacters:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">string</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//解析中のタグが「game」だったら</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">nowTagStr</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;game&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//テキストバッファに文字を追加する</span>
</span><span class='line'>      <span class="n">txtBuffer</span> <span class="o">=</span> <span class="p">[</span><span class="n">txtBuffer</span> <span class="nl">stringByAppendingString:</span><span class="n">string</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//テキストビューにテキストバッファの文字を追加する</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">parser:</span><span class="p">(</span><span class="n">NSXMLParser</span> <span class="o">*</span><span class="p">)</span><span class="nv">parser</span>
</span><span class='line'> <span class="nf">didEndElement:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">elementName</span>
</span><span class='line'>  <span class="nf">namespaceURI:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">namespaceURI</span>
</span><span class='line'> <span class="nf">qualifiedName:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">qName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//終了タグが「game」だったら</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">([</span><span class="n">elementName</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;game&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//テキストビューにテキストバッファの文字を追加する</span>
</span><span class='line'>      <span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">textView</span><span class="p">.</span><span class="n">text</span> <span class="nl">stringByAppendingFormat:</span>
</span><span class='line'>                          <span class="s">@&quot;</span><span class="se">\n</span><span class="s"> 要素=[%@]</span><span class="se">\n\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">txtBuffer</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneアプリをローカライズするまでの全スクリーンショット]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/17/xcode-localize/"/>
    <updated>2013-04-17T11:58:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/17/xcode-localize</id>
    <content type="html"><![CDATA[<p>iOSアプリをローカライズするまでの全スクリーンショットに手順を添えて紹介します。</p>

<p>下記にサンプルを用意しました。スクリーンショットも同梱しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/xcode-localize">https://github.com/masakihirokawa/xcode-localize</a></li>
</ul>


<h2>スクリーンショットとローカライズ手順</h2>

<h3>1. PROJECT -> info -> Localizationsの項目に Japaniese (ja)を追加する</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot1.png" title="1. PROJECT -&gt; info -&gt; Localizationsの項目に Japaniese (ja)を追加する" alt="1. PROJECT -&gt; info -&gt; Localizationsの項目に Japaniese (ja)を追加する" /></p>

<h3>2. MainStoryboard.storyboardと InfoPlist.stringsにチェックを入れて Finishを選択</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot2.png" title="2. MainStoryboard.storyboardと InfoPlist.stringsにチェックを入れて Finishを選択" alt="2. MainStoryboard.storyboardと InfoPlist.stringsにチェックを入れて Finishを選択" /></p>

<h3>3. MainStoryboardが複製され、Japanieseと Englishの2つに分かれました</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot3.png" title="3. MainStoryboardが複製され、Japanieseと Englishの2つに分かれました" alt="3. MainStoryboardが複製され、Japanieseと Englishの2つに分かれました" /></p>

<h3>4. Strings Filesを新規作成します</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot4.png" title="4. Strings Filesを新規作成します" alt="4. Strings Filesを新規作成します" /></p>

<h3>5. ファイル名を「Localizable.strings」にします</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot5.png" title="5. ファイル名を「Localizable.strings」にします" alt="5. ファイル名を「Localizable.strings」にします" /></p>

<h3>6. 作成した Localizable.stringsファイルを選択し、「Localize…」ボタンを押します</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot6.png" title="6. 作成した Localizable.stringsファイルを選択し、「Localize…」ボタンを押します" alt="6. 作成した Localizable.stringsファイルを選択し、「Localize…」ボタンを押します" /></p>

<h3>7. Englishと Japanieseの両方にチェックを入れます</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot7.png" title="7. Englishと Japanieseの両方にチェックを入れます" alt="7. Englishと Japanieseの両方にチェックを入れます" /></p>

<h3>8. Localizable.stringsファイルに各国の単語を定義します</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot8.png" title="8. Localizable.stringsファイルに各国の単語を定義します" alt="8. Localizable.stringsファイルに各国の単語を定義します" /></p>

<h3>9. アプリ名とアプリアイコンの下に表示される名前を指定することも出来ます</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot9.png" title="9. アプリ名とアプリアイコンの下に表示される名前を指定することも出来ます" alt="9. アプリ名とアプリアイコンの下に表示される名前を指定することも出来ます" /></p>

<h3>10. 「NSLocalizedStrings」にキーワードを指定すると、各国語に対応した単語が表示されます</h3>

<p><img src="http://lab.dolice.net/images/article/localize/screenshot10.png" title="10. 「NSLocalizedStrings」にキーワードを指定すると、各国語に対応した単語が表示されます" alt="10. 「NSLocalizedStrings」にキーワードを指定すると、各国語に対応した単語が表示されます" /></p>

<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">NSLocalizedString</span><span class="p">(</span><span class="s">@&quot;AppName&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<h3>システム言語を英語に設定していた場合</h3>

<blockquote><p>My Apps</p></blockquote>

<h3>システム言語を日本語に設定していた場合</h3>

<blockquote><p>マイアプリ</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アフィン変換を使用したアニメーション]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/17/objc-cg-affine-transform-make-rotation/"/>
    <updated>2013-04-17T10:30:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/17/objc-cg-affine-transform-make-rotation</id>
    <content type="html"><![CDATA[<p>アフィン変換を使用してラベルをアニメーションさせるサンプルを作成しました。</p>

<p>今回は「CGAffineTransformMakeRotation」を使用し、ラベルの角度を変えながらアニメーションさせています。</p>

<p>下記よりサンプルをダウンロードできます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-cg-affine-transform-make-rotation">https://github.com/masakihirokawa/objc-cg-affine-transform-make-rotation</a></li>
</ul>


<h2>ソースコード</h2>

<h3>ViewController.h</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">label</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UIButton</span> <span class="o">*</span><span class="n">button</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ViewController.m</h3>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ボタンの横幅</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_buttonWidth</span> <span class="o">=</span> <span class="mi">58</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ボタンの縦幅</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_buttonHeight</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ボタンと画面端とのマージン</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_buttonMargin</span> <span class="o">=</span> <span class="mi">18</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ラベルの横幅</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_labelWidth</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ラベルの縦幅</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_labelHeight</span> <span class="o">=</span> <span class="mi">40</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ラベルの基点 (X座標)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_labelBaseX</span> <span class="o">=</span> <span class="o">-</span><span class="mi">40</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ラベルの基点 (Y座標)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_labelBaseY</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ラベルの目標値 (X座標)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_labelAimX</span> <span class="o">=</span> <span class="mi">240</span><span class="p">;</span>
</span><span class='line'><span class="c1">//ラベルの目標値 (Y座標)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">_labelAimY</span> <span class="o">=</span> <span class="mi">320</span><span class="p">;</span>
</span><span class='line'><span class="c1">//アニメーション秒数</span>
</span><span class='line'><span class="kt">float</span> <span class="n">animationDuration</span> <span class="o">=</span> <span class="mf">2.0f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//ボタン初期化</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initButton</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//ラベル初期化</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">initLabel</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ボタン初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initButton</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ボタンを角丸にする</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">button</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeRoundedRect</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//ボタンの座標と寸法を定義</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">button</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="n">_buttonWidth</span> <span class="o">-</span> <span class="n">_buttonMargin</span><span class="p">,</span>
</span><span class='line'>                                 <span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">-</span> <span class="n">_buttonHeight</span> <span class="o">-</span> <span class="n">_buttonMargin</span><span class="p">,</span>
</span><span class='line'>                                 <span class="n">_buttonWidth</span><span class="p">,</span>
</span><span class='line'>                                 <span class="n">_buttonHeight</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//ボタンのタイトル定義</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">button</span> <span class="nl">setTitle:</span><span class="s">@&quot;Start&quot;</span>
</span><span class='line'>               <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">button</span> <span class="n">sizeToFit</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//ボタンをタップで startAnimationメソッドを呼び出し</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">button</span> <span class="nl">addTarget:</span><span class="n">self</span>
</span><span class='line'>                  <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">startAnimation:</span><span class="p">)</span>
</span><span class='line'>        <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//ステージに追加</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">self</span><span class="p">.</span><span class="n">button</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//ラベル初期化</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">initLabel</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//ラベルの座標と寸法を定義</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">_labelWidth</span><span class="p">,</span> <span class="n">_labelHeight</span><span class="p">)];</span>
</span><span class='line'>  <span class="c1">//ラベルの初期座標を定義</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">_labelBaseX</span><span class="p">,</span> <span class="n">_labelBaseY</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//ラベルテキストを代入</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">@&quot;Animation&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//ラベルのテキストカラーを黒にする</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//ラベルをセンタリングする</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">textAlignment</span> <span class="o">=</span> <span class="n">NSTextAlignmentCenter</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//ラベルを viewに配置</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//アニメーション開始メソッド</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">startAnimation:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//アニメーション開始</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">beginAnimations:</span><span class="nb">nil</span> <span class="nl">context:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//指定した秒数でアニメーションする</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="nl">setAnimationDuration:</span><span class="n">animationDuration</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//アニメーションの開始座標</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">_labelBaseX</span><span class="p">,</span> <span class="n">_labelBaseY</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//アニメーションの目標座標</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">center</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span><span class="n">_labelAimX</span><span class="p">,</span> <span class="n">_labelAimY</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//アフィン変換を使用してアニメーションさせる</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">label</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CGAffineTransformMakeRotation</span><span class="p">(</span><span class="mi">270</span> <span class="o">*</span> <span class="n">M_PI</span><span class="o">/</span><span class="mi">180</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//アニメーション実行</span>
</span><span class='line'>  <span class="p">[</span><span class="n">UIView</span> <span class="n">commitAnimations</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[クラス名を取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/17/objc-ns-string-from-class/"/>
    <updated>2013-04-17T09:25:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/17/objc-ns-string-from-class</id>
    <content type="html"><![CDATA[<p>クラス名を取得するサンプルを以下に作成しました。</p>

<p>新たに「MyClass」クラスを作成し、ヘッダファイルをインポートしてクラス名を取得しています。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-string-from-class">https://github.com/masakihirokawa/objc-ns-string-from-class</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'><span class="cp">#import &quot;MyClass.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">main</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">str</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="n">string</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">myObject</span> <span class="o">=</span> <span class="p">[[</span><span class="n">MyClass</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//インスタンスからクラスを取得し、クラスからクラス名を取得する</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">NSStringFromClass</span><span class="p">([</span><span class="n">str</span> <span class="n">class</span><span class="p">]));</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="n">NSStringFromClass</span><span class="p">([</span><span class="n">myObject</span> <span class="n">class</span><span class="p">]));</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>__NSCFConstantString<br />
MyClass</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[インスタンスのクラスを取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/16/objc-get-class-instance/"/>
    <updated>2013-04-16T11:07:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/16/objc-get-class-instance</id>
    <content type="html"><![CDATA[<p>インスタンスのクラスを取得するサンプルを以下に作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-get-class-instance">https://github.com/masakihirokawa/objc-get-class-instance</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//インスタンスを生成する</span>
</span><span class='line'>  <span class="kt">id</span> <span class="n">str</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="n">string</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//インスタンスからクラスを取得する</span>
</span><span class='line'>  <span class="n">Class</span> <span class="n">class</span> <span class="o">=</span> <span class="p">[</span><span class="n">str</span> <span class="n">class</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">class</span> <span class="n">description</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>__NSCFConstantString</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CollectionViewを使わずにサムネイルをタイル状に並べる方法]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/15/download-objc-column-thumbnail-list/"/>
    <updated>2013-04-15T10:00:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/15/download-objc-column-thumbnail-list</id>
    <content type="html"><![CDATA[<p>iOS6.0から追加された CollectionViewを使わずにサムネイルをタイル状に並べるサンプルを作成しました。下記よりサンプルのダウンロードが行えます。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-column-thumbnail-list">https://github.com/masakihirokawa/objc-column-thumbnail-list</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#import &quot;ViewController.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">ViewController</span> <span class="p">()</span>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//サムネイルの総数</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailNum</span> <span class="o">=</span> <span class="mi">300</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルのファイル名を入れる配列</span>
</span><span class='line'><span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">_thumbnails</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルのファイル名接頭詞</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">_thumbnailFilePreffix</span> <span class="o">=</span> <span class="s">@&quot;images&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルのファイル名接尾詞</span>
</span><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">_thumbnailFileSuffix</span> <span class="o">=</span> <span class="s">@&quot;_thumb&quot;</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイル間のマージン</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailMargin</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルの外枠の寸法</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailOutlineSize</span> <span class="o">=</span> <span class="mi">76</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルのボーダーを含まない寸法</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailSize</span> <span class="o">=</span> <span class="mi">74</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルの列の数</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailColumnNum</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルの列数のカウント</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailColumnCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルの行数のカウント</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_thumbnailRowCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="c1">//サムネイルのボタンの寸法</span>
</span><span class='line'><span class="n">NSInteger</span> <span class="n">_buttonSize</span> <span class="o">=</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//サムネイルのファイル名を配列に代入</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setThumbnailImageResources</span><span class="p">];</span>
</span><span class='line'>  <span class="c1">//サムネイルリストを生成</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">setThumbnailList</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">didReceiveMemoryWarning</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">super</span> <span class="n">didReceiveMemoryWarning</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//サムネイルのファイル名を配列に代入</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setThumbnailImageResources</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//変更可能な配列を初期化</span>
</span><span class='line'>  <span class="n">_thumbnails</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">_thumbnailNum</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//拡張子より前のファイル名を保持</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_thumbnails</span> <span class="nl">addObject:</span><span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@%@&quot;</span><span class="p">,</span> <span class="n">_thumbnailFilePreffix</span><span class="p">,</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%d&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">]]];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//サムネイルリストを生成</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setThumbnailList</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//サムネイル群を入れるスクロールビューを初期化</span>
</span><span class='line'>  <span class="n">UIScrollView</span> <span class="o">*</span><span class="n">scrollView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIScrollView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithFrame:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span> <span class="p">(</span><span class="kt">id</span> <span class="n">thumbnailName</span> <span class="k">in</span> <span class="n">_thumbnails</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">//サムネイルは4列で折り返す</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">_thumbnailColumnCount</span> <span class="o">==</span> <span class="n">_thumbnailColumnNum</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">_thumbnailColumnCount</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="n">_thumbnailRowCount</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">//サムネイル表示</span>
</span><span class='line'>    <span class="n">NSString</span> <span class="o">*</span><span class="n">imageFile</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nl">stringWithFormat:</span><span class="s">@&quot;%@%@&quot;</span><span class="p">,</span> <span class="n">thumbnailName</span><span class="p">,</span> <span class="n">_thumbnailFileSuffix</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//画像リソースの取得</span>
</span><span class='line'>    <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span> <span class="nl">getUIImageFromResources:</span><span class="n">imageFile</span> <span class="nl">ext:</span><span class="s">@&quot;png&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="n">UIImageView</span> <span class="o">*</span><span class="n">thumbnailView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage:</span><span class="n">image</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//サムネイルの寸法指定</span>
</span><span class='line'>    <span class="n">CGRect</span> <span class="n">rect</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="n">_thumbnailMargin</span> <span class="o">+</span> <span class="p">(</span><span class="n">_thumbnailColumnCount</span> <span class="o">*</span> <span class="n">_thumbnailOutlineSize</span><span class="p">),</span>
</span><span class='line'>                             <span class="n">_thumbnailMargin</span> <span class="o">+</span> <span class="p">(</span><span class="n">_thumbnailRowCount</span> <span class="o">*</span> <span class="n">_thumbnailOutlineSize</span><span class="p">),</span> <span class="n">_thumbnailSize</span><span class="p">,</span> <span class="n">_thumbnailSize</span><span class="p">);</span>
</span><span class='line'>    <span class="p">[</span><span class="n">thumbnailView</span> <span class="nl">setFrame:</span><span class="n">rect</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//サムネイルをタップ可能にする</span>
</span><span class='line'>    <span class="n">thumbnailView</span><span class="p">.</span><span class="n">userInteractionEnabled</span> <span class="o">=</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">//ボタン追加</span>
</span><span class='line'>    <span class="n">UIButton</span> <span class="o">*</span><span class="n">selectButton</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIButton</span> <span class="nl">buttonWithType:</span><span class="n">UIButtonTypeCustom</span><span class="p">];</span>
</span><span class='line'>    <span class="n">selectButton</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">_buttonSize</span><span class="p">,</span> <span class="n">_buttonSize</span><span class="p">);</span>
</span><span class='line'>    <span class="c1">//ボタンのタグを代入</span>
</span><span class='line'>    <span class="n">selectButton</span><span class="p">.</span><span class="n">tag</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">selectButton</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">selectImage:</span><span class="p">)</span>
</span><span class='line'>           <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">thumbnailView</span> <span class="nl">addSubview:</span><span class="n">selectButton</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">//スクロールビューにサムネイルを追加</span>
</span><span class='line'>    <span class="p">[</span><span class="n">scrollView</span> <span class="nl">insertSubview:</span><span class="n">thumbnailView</span> <span class="nl">atIndex:</span><span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">subviews</span> <span class="n">count</span><span class="p">]];</span>
</span><span class='line'>    <span class="c1">//サムネイルの列を一つ進める</span>
</span><span class='line'>    <span class="n">_thumbnailColumnCount</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>    <span class="n">i</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//スクロール範囲の設定</span>
</span><span class='line'>  <span class="n">scrollView</span><span class="p">.</span><span class="n">contentSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">320</span><span class="p">,</span> <span class="p">((</span><span class="n">_buttonSize</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">_thumbnailRowCount</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">-</span> <span class="p">(</span><span class="n">_thumbnailMargin</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)));</span>
</span><span class='line'>  <span class="c1">//スクロールビューをステージに追加</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview:</span><span class="n">scrollView</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//サムネイルがタップされた時のイベント</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">selectImage:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//予め代入しておいた tagを取得するためにセレクタを代入</span>
</span><span class='line'>  <span class="n">UIButton</span> <span class="o">*</span><span class="n">button</span> <span class="o">=</span> <span class="p">(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="n">sender</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//予め代入しておいた tagの数値を出力</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;button.tag: %d&quot;</span><span class="p">,</span> <span class="n">button</span><span class="p">.</span><span class="n">tag</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//画像ファイルを取得</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">getUIImageFromResources:</span><span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">fileName</span> <span class="nf">ext:</span><span class="p">(</span><span class="n">NSString</span><span class="o">*</span><span class="p">)</span><span class="nv">ext</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">NSString</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSBundle</span> <span class="n">mainBundle</span><span class="p">]</span> <span class="nl">pathForResource:</span><span class="n">fileName</span> <span class="nl">ofType:</span><span class="n">ext</span><span class="p">];</span>
</span><span class='line'>  <span class="n">UIImage</span> <span class="o">*</span><span class="n">img</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithContentsOfFile:</span><span class="n">path</span><span class="p">];</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">img</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[タイムゾーンの一覧を取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/15/objc-ns-time-zone-known-time-zone-names/"/>
    <updated>2013-04-15T07:30:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/15/objc-ns-time-zone-known-time-zone-names</id>
    <content type="html"><![CDATA[<p>Objective-Cでタイムゾーンの一覧を取得するサンプルを以下に作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-ns-time-zone-known-time-zone-names">https://github.com/masakihirokawa/objc-ns-time-zone-known-time-zone-names</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//タイムゾーンの一覧を取得する</span>
</span><span class='line'>  <span class="n">NSArray</span> <span class="o">*</span><span class="n">timeZoneNamesArray</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimeZone</span> <span class="n">knownTimeZoneNames</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;timeZoneNamesArray: %@&quot;</span><span class="p">,</span> <span class="n">timeZoneNamesArray</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//省略形式の辞書を取得する</span>
</span><span class='line'>  <span class="n">NSDictionary</span> <span class="o">*</span><span class="n">timeZoneNamesDic</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimeZone</span> <span class="n">abbreviationDictionary</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;timeZoneNamesDic: %@&quot;</span><span class="p">,</span> <span class="n">timeZoneNamesDic</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[指定した日時から計算した日時を取得する]]></title>
    <link href="http://lab.dolice.net/blog/2013/04/14/objc-calendar-date-by-adding-components/"/>
    <updated>2013-04-14T17:03:00+09:00</updated>
    <id>http://lab.dolice.net/blog/2013/04/14/objc-calendar-date-by-adding-components</id>
    <content type="html"><![CDATA[<p>指定した日時を基準にして特定の日時を取得するには、「dateByAddingComponents」メソッドを使用します。以下にサンプルを作成しました。</p>

<h2>サンプルダウンロード</h2>

<ul>
<li><a href="https://github.com/masakihirokawa/objc-calendar-date-by-adding-components">https://github.com/masakihirokawa/objc-calendar-date-by-adding-components</a></li>
</ul>


<h2>ソースコード</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">main</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="c1">//現在の日時を取得する</span>
</span><span class='line'>  <span class="n">NSDate</span> <span class="o">*</span><span class="n">currentDate</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDate</span> <span class="n">date</span><span class="p">];</span>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;BaseDate: %@&quot;</span><span class="p">,</span> <span class="n">currentDate</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//30日前のオブジェクトを取得する</span>
</span><span class='line'>  <span class="n">NSDateComponents</span> <span class="o">*</span><span class="n">components</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSDateComponents</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">components</span> <span class="nl">setDay:</span> <span class="o">-</span><span class="mi">30</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//グレゴリオ暦のカレンダーを取得する</span>
</span><span class='line'>  <span class="n">NSCalendar</span> <span class="o">*</span><span class="n">calendar</span><span class="p">;</span>
</span><span class='line'>  <span class="n">calendar</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSCalendar</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCalendarIdentifier:</span><span class="n">NSGregorianCalendar</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//オブジェクトを取得する</span>
</span><span class='line'>  <span class="n">NSDate</span> <span class="o">*</span><span class="n">date</span><span class="p">;</span>
</span><span class='line'>  <span class="n">date</span> <span class="o">=</span> <span class="p">[</span><span class="n">calendar</span> <span class="nl">dateByAddingComponents:</span><span class="n">components</span>
</span><span class='line'>                                   <span class="nl">toDate:</span><span class="n">currentDate</span>
</span><span class='line'>                                  <span class="nl">options:</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Before 30days: %@&quot;</span><span class="p">,</span> <span class="n">date</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>出力結果</h2>

<blockquote><p>BaseDate: 2013-04-14 08:10:44 +0000<br />
Before 30days: 2013-03-15 08:10:44 +0000</p></blockquote>
]]></content>
  </entry>
  
</feed>
